Terminals unused in grammar

    TYPE


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 optional_variable: optional_variable variable
    5                  | ε

    6 variable: IDENTIFIER ':' type IS statement_
    7         | error ';'

    8 parameters: parameter more_parameters

    9 more_parameters: more_parameters ',' parameter
   10                | ε

   11 parameter: IDENTIFIER ':' type
   12          | ε

   13 type: INTEGER
   14     | REAL
   15     | BOOLEAN

   16 $@1: ε

   17 body: BEGIN_ $@1 statement_ END ';'

   18 statement_: statement ';'
   19           | error ';'

   20 statement: expression
   21          | REDUCE operator reductions ENDREDUCE
   22          | IF expression THEN statement_ ELSE statement_ ENDIF

   23 $@2: ε

   24 statement: CASE expression $@2 IS case_ OTHERS ARROW statement_ ENDCASE

   25 operator: ADDOP
   26         | MULOP

   27 case_: case_ case
   28      | ε

   29 case: WHEN INT_LITERAL ARROW statement_
   30     | error ';'

   31 reductions: reductions statement_
   32           | ε

   33 expression: expression OROP binary
   34           | binary

   35 binary: binary ANDOP relation
   36       | relation

   37 relation: relation RELOP term
   38         | term

   39 term: term ADDOP remop
   40     | remop

   41 remop: remop REMOP factor
   42      | factor

   43 factor: factor MULOP expop
   44       | expop

   45 expop: primary EXPOP notop
   46      | notop

   47 notop: NOTOP primary
   48      | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49
    ')' (41) 49
    ',' (44) 9
    ':' (58) 6 11
    ';' (59) 2 3 7 17 18 19 30
    error (256) 3 7 19 30
    IDENTIFIER <iden> (258) 2 6 11 53
    TYPE (259)
    INT_LITERAL <type> (260) 29 50
    REAL_LITERAL <type> (261) 51
    BOOL_LITERAL <type> (262) 52
    ADDOP (263) 25 39
    MULOP (264) 26 43
    RELOP (265) 37
    REMOP (266) 41
    EXPOP (267) 45
    ANDOP (268) 35
    OROP (269) 33
    NOTOP (270) 47
    BEGIN_ (271) 17
    BOOLEAN (272) 15
    END (273) 17
    ENDREDUCE (274) 21
    FUNCTION (275) 2
    INTEGER (276) 13
    IS (277) 6 24
    REDUCE (278) 21
    RETURNS (279) 2
    ARROW (280) 24 29
    CASE (281) 24
    ELSE (282) 22
    ENDCASE (283) 24
    ENDIF (284) 22
    IF (285) 22
    OTHERS (286) 24
    REAL (287) 14
    THEN (288) 22
    WHEN (289) 29


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    function (41)
        on left: 1
        on right: 0
    function_header (42)
        on left: 2 3
        on right: 1
    optional_variable (43)
        on left: 4 5
        on right: 1 4
    variable (44)
        on left: 6 7
        on right: 4
    parameters (45)
        on left: 8
        on right: 2
    more_parameters (46)
        on left: 9 10
        on right: 8 9
    parameter (47)
        on left: 11 12
        on right: 8 9
    type <type> (48)
        on left: 13 14 15
        on right: 2 6 11
    body <type> (49)
        on left: 17
        on right: 1
    $@1 (50)
        on left: 16
        on right: 17
    statement_ <type> (51)
        on left: 18 19
        on right: 6 17 22 24 29 31
    statement <type> (52)
        on left: 20 21 22 24
        on right: 18
    $@2 (53)
        on left: 23
        on right: 24
    operator (54)
        on left: 25 26
        on right: 21
    case_ <type> (55)
        on left: 27 28
        on right: 24 27
    case <type> (56)
        on left: 29 30
        on right: 27
    reductions <type> (57)
        on left: 31 32
        on right: 21 31
    expression <type> (58)
        on left: 33 34
        on right: 20 22 24 33 49
    binary <type> (59)
        on left: 35 36
        on right: 33 34 35
    relation <type> (60)
        on left: 37 38
        on right: 35 36 37
    term <type> (61)
        on left: 39 40
        on right: 37 38 39
    remop <type> (62)
        on left: 41 42
        on right: 39 40 41
    factor <type> (63)
        on left: 43 44
        on right: 41 42 43
    expop <type> (64)
        on left: 45 46
        on right: 43 44
    notop <type> (65)
        on left: 47 48
        on right: 45 46
    primary <type> (66)
        on left: 49 50 51 52 53
        on right: 45 47 48


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    $default  reduce using rule 5 (optional_variable)

    optional_variable  go to state 8


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 12 (parameter)

    parameters  go to state 10
    parameter   go to state 11


State 7

    0 $accept: function $end •

    $default  accept


State 8

    1 function: function_header optional_variable • body
    4 optional_variable: optional_variable • variable

    error       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    BEGIN_      shift, and go to state 14

    variable  go to state 15
    body      go to state 16


State 9

   11 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 10

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 11

    8 parameters: parameter • more_parameters

    $default  reduce using rule 10 (more_parameters)

    more_parameters  go to state 19


State 12

    7 variable: error • ';'

    ';'  shift, and go to state 20


State 13

    6 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 21


State 14

   17 body: BEGIN_ • $@1 statement_ END ';'

    $default  reduce using rule 16 ($@1)

    $@1  go to state 22


State 15

    4 optional_variable: optional_variable variable •

    $default  reduce using rule 4 (optional_variable)


State 16

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 17

   11 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 23
    INTEGER  shift, and go to state 24
    REAL     shift, and go to state 25

    type  go to state 26


State 18

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 23
    INTEGER  shift, and go to state 24
    REAL     shift, and go to state 25

    type  go to state 27


State 19

    8 parameters: parameter more_parameters •
    9 more_parameters: more_parameters • ',' parameter

    ','  shift, and go to state 28

    $default  reduce using rule 8 (parameters)


State 20

    7 variable: error ';' •

    $default  reduce using rule 7 (variable)


State 21

    6 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 23
    INTEGER  shift, and go to state 24
    REAL     shift, and go to state 25

    type  go to state 29


State 22

   17 body: BEGIN_ $@1 • statement_ END ';'

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 40
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 23

   15 type: BOOLEAN •

    $default  reduce using rule 15 (type)


State 24

   13 type: INTEGER •

    $default  reduce using rule 13 (type)


State 25

   14 type: REAL •

    $default  reduce using rule 14 (type)


State 26

   11 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 11 (parameter)


State 27

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 51


State 28

    9 more_parameters: more_parameters ',' • parameter

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 12 (parameter)

    parameter  go to state 52


State 29

    6 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 53


State 30

   19 statement_: error • ';'

    ';'  shift, and go to state 54


State 31

   53 primary: IDENTIFIER •

    $default  reduce using rule 53 (primary)


State 32

   50 primary: INT_LITERAL •

    $default  reduce using rule 50 (primary)


State 33

   51 primary: REAL_LITERAL •

    $default  reduce using rule 51 (primary)


State 34

   52 primary: BOOL_LITERAL •

    $default  reduce using rule 52 (primary)


State 35

   47 notop: NOTOP • primary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    '('           shift, and go to state 39

    primary  go to state 55


State 36

   21 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 56
    MULOP  shift, and go to state 57

    operator  go to state 58


State 37

   24 statement: CASE • expression $@2 IS case_ OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 59
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 38

   22 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 60
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 39

   49 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expression  go to state 61
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 40

   17 body: BEGIN_ $@1 statement_ • END ';'

    END  shift, and go to state 62


State 41

   18 statement_: statement • ';'

    ';'  shift, and go to state 63


State 42

   20 statement: expression •
   33 expression: expression • OROP binary

    OROP  shift, and go to state 64

    $default  reduce using rule 20 (statement)


State 43

   34 expression: binary •
   35 binary: binary • ANDOP relation

    ANDOP  shift, and go to state 65

    $default  reduce using rule 34 (expression)


State 44

   36 binary: relation •
   37 relation: relation • RELOP term

    RELOP  shift, and go to state 66

    $default  reduce using rule 36 (binary)


State 45

   38 relation: term •
   39 term: term • ADDOP remop

    ADDOP  shift, and go to state 67

    $default  reduce using rule 38 (relation)


State 46

   40 term: remop •
   41 remop: remop • REMOP factor

    REMOP  shift, and go to state 68

    $default  reduce using rule 40 (term)


State 47

   42 remop: factor •
   43 factor: factor • MULOP expop

    MULOP  shift, and go to state 69

    $default  reduce using rule 42 (remop)


State 48

   44 factor: expop •

    $default  reduce using rule 44 (factor)


State 49

   46 expop: notop •

    $default  reduce using rule 46 (expop)


State 50

   45 expop: primary • EXPOP notop
   48 notop: primary •

    EXPOP  shift, and go to state 70

    $default  reduce using rule 48 (notop)


State 51

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 52

    9 more_parameters: more_parameters ',' parameter •

    $default  reduce using rule 9 (more_parameters)


State 53

    6 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 71
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 54

   19 statement_: error ';' •

    $default  reduce using rule 19 (statement_)


State 55

   47 notop: NOTOP primary •

    $default  reduce using rule 47 (notop)


State 56

   25 operator: ADDOP •

    $default  reduce using rule 25 (operator)


State 57

   26 operator: MULOP •

    $default  reduce using rule 26 (operator)


State 58

   21 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 32 (reductions)

    reductions  go to state 72


State 59

   24 statement: CASE expression • $@2 IS case_ OTHERS ARROW statement_ ENDCASE
   33 expression: expression • OROP binary

    OROP  shift, and go to state 64

    $default  reduce using rule 23 ($@2)

    $@2  go to state 73


State 60

   22 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   33 expression: expression • OROP binary

    OROP  shift, and go to state 64
    THEN  shift, and go to state 74


State 61

   33 expression: expression • OROP binary
   49 primary: '(' expression • ')'

    OROP  shift, and go to state 64
    ')'   shift, and go to state 75


State 62

   17 body: BEGIN_ $@1 statement_ END • ';'

    ';'  shift, and go to state 76


State 63

   18 statement_: statement ';' •

    $default  reduce using rule 18 (statement_)


State 64

   33 expression: expression OROP • binary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    binary    go to state 77
    relation  go to state 44
    term      go to state 45
    remop     go to state 46
    factor    go to state 47
    expop     go to state 48
    notop     go to state 49
    primary   go to state 50


State 65

   35 binary: binary ANDOP • relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    relation  go to state 78
    term      go to state 45
    remop     go to state 46
    factor    go to state 47
    expop     go to state 48
    notop     go to state 49
    primary   go to state 50


State 66

   37 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    term     go to state 79
    remop    go to state 46
    factor   go to state 47
    expop    go to state 48
    notop    go to state 49
    primary  go to state 50


State 67

   39 term: term ADDOP • remop

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    remop    go to state 80
    factor   go to state 47
    expop    go to state 48
    notop    go to state 49
    primary  go to state 50


State 68

   41 remop: remop REMOP • factor

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    factor   go to state 81
    expop    go to state 48
    notop    go to state 49
    primary  go to state 50


State 69

   43 factor: factor MULOP • expop

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    expop    go to state 82
    notop    go to state 49
    primary  go to state 50


State 70

   45 expop: primary EXPOP • notop

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    '('           shift, and go to state 39

    notop    go to state 83
    primary  go to state 84


State 71

    6 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 6 (variable)


State 72

   21 statement: REDUCE operator reductions • ENDREDUCE
   31 reductions: reductions • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    ENDREDUCE     shift, and go to state 85
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 86
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 73

   24 statement: CASE expression $@2 • IS case_ OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 87


State 74

   22 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 88
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 75

   49 primary: '(' expression ')' •

    $default  reduce using rule 49 (primary)


State 76

   17 body: BEGIN_ $@1 statement_ END ';' •

    $default  reduce using rule 17 (body)


State 77

   33 expression: expression OROP binary •
   35 binary: binary • ANDOP relation

    ANDOP  shift, and go to state 65

    $default  reduce using rule 33 (expression)


State 78

   35 binary: binary ANDOP relation •
   37 relation: relation • RELOP term

    RELOP  shift, and go to state 66

    $default  reduce using rule 35 (binary)


State 79

   37 relation: relation RELOP term •
   39 term: term • ADDOP remop

    ADDOP  shift, and go to state 67

    $default  reduce using rule 37 (relation)


State 80

   39 term: term ADDOP remop •
   41 remop: remop • REMOP factor

    REMOP  shift, and go to state 68

    $default  reduce using rule 39 (term)


State 81

   41 remop: remop REMOP factor •
   43 factor: factor • MULOP expop

    MULOP  shift, and go to state 69

    $default  reduce using rule 41 (remop)


State 82

   43 factor: factor MULOP expop •

    $default  reduce using rule 43 (factor)


State 83

   45 expop: primary EXPOP notop •

    $default  reduce using rule 45 (expop)


State 84

   48 notop: primary •

    $default  reduce using rule 48 (notop)


State 85

   21 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 21 (statement)


State 86

   31 reductions: reductions statement_ •

    $default  reduce using rule 31 (reductions)


State 87

   24 statement: CASE expression $@2 IS • case_ OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 28 (case_)

    case_  go to state 89


State 88

   22 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 90


State 89

   24 statement: CASE expression $@2 IS case_ • OTHERS ARROW statement_ ENDCASE
   27 case_: case_ • case

    error   shift, and go to state 91
    OTHERS  shift, and go to state 92
    WHEN    shift, and go to state 93

    case  go to state 94


State 90

   22 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 95
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 91

   30 case: error • ';'

    ';'  shift, and go to state 96


State 92

   24 statement: CASE expression $@2 IS case_ OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 97


State 93

   29 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 98


State 94

   27 case_: case_ case •

    $default  reduce using rule 27 (case_)


State 95

   22 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 99


State 96

   30 case: error ';' •

    $default  reduce using rule 30 (case)


State 97

   24 statement: CASE expression $@2 IS case_ OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 100
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 98

   29 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 101


State 99

   22 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 22 (statement)


State 100

   24 statement: CASE expression $@2 IS case_ OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 102


State 101

   29 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    REAL_LITERAL  shift, and go to state 33
    BOOL_LITERAL  shift, and go to state 34
    NOTOP         shift, and go to state 35
    REDUCE        shift, and go to state 36
    CASE          shift, and go to state 37
    IF            shift, and go to state 38
    '('           shift, and go to state 39

    statement_  go to state 103
    statement   go to state 41
    expression  go to state 42
    binary      go to state 43
    relation    go to state 44
    term        go to state 45
    remop       go to state 46
    factor      go to state 47
    expop       go to state 48
    notop       go to state 49
    primary     go to state 50


State 102

   24 statement: CASE expression $@2 IS case_ OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 24 (statement)


State 103

   29 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 29 (case)
